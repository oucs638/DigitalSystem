module first (in, out);

input [3:0] in;
output [6:0] out;
reg [6:0] out;

always @ (in);
begin
  case({in})
    4'b0000:out=7'b1000000;
    4'b0001:out=7'b1111001;
    4'b0010:out=7'b0100100;
    4'b0011:out=7'b0010010;
    4'b0100:out=7'b1111000;
    4'b0101:out=7'b0010000;
    4'b0110:out=7'b0100001;
    4'b0111:out=7'b0001110;
    4'b1000:out=7'b1000000;
    4'b1001:out=7'b1000000;
    4'b1010:out=7'b1000000;
    4'b1011:out=7'b1000000;
    4'b1100:out=7'b1000000;
    4'b1101:out=7'b1000000;
    4'b1110:out=7'b1000000;
    4'b1111:out=7'b1000000;
  endcase
end

endmodule

****************************************************************

module second (in, out0, out1, out2)

input[1:0] in;
output[6:0] out0, out1, out2;
reg[6:0] out0, out1, out2;

always @ (in);
begin
  case({in})
    2'b00:
    begin
      out2=7'b1000000;
      out1=7'b1111001;
      out0=7'b0100100;
    end
    2'b01:
    begin
      out2=7'b1000000;
      out1=7'b0100100;
      out0=7'b0000000;
    end
    2'b10:
    begin
      out2=7'b1000000;
      out1=7'b0011001;
      out0=7'b0000000;
    end
    2'b11:
    begin
      out2=7'b0000110;
      out1=7'b0001000;
      out0=7'b0001000;
    end
  endcase
end

endmodule